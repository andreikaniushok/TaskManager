{"ast":null,"code":"var _jsxFileName = \"/Users/mak/Desktop/project_zero/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst configList = [\"Task 1\", \"Task 2\", \"Task 3\"];\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([...configList]);\n  const [task, setTask] = useState(\"\");\n  const [isEditTask, setIsEditTask] = useState(false);\n  const [editableTask, setEditableTask] = useState(\"\");\n  const handleDeleteTask = indexTask => {\n    const newTasksList = tasks.filter((item, index) => index !== indexTask);\n    setTasks(newTasksList);\n  };\n  console.log(tasks);\n  const handleChangeTask = e => {\n    setTask(e.target.value);\n  };\n  const handleAddTask = e => {\n    e.preventDefault();\n    if (task.trim() !== \"\") {\n      const newTasksList = [...tasks, task];\n      setTasks(newTasksList);\n      setTask(\"\");\n    }\n  };\n  const handleEditTask = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteTask(index),\n        children: \"Delite task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddTask,\n        children: [!isEditTask ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Input task\",\n            value: task,\n            onChange: handleChangeTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setIsEditTask(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HeVYsERWDFOTqUCllj1365yVAac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","configList","App","_s","tasks","setTasks","task","setTask","isEditTask","setIsEditTask","editableTask","setEditableTask","handleDeleteTask","indexTask","newTasksList","filter","item","index","console","log","handleChangeTask","e","target","value","handleAddTask","preventDefault","trim","handleEditTask","children","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/mak/Desktop/project_zero/src/App.tsx"],"sourcesContent":["import React, { ChangeEvent, FC, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst configList = [\"Task 1\", \"Task 2\", \"Task 3\"];\n\nconst App: FC = () => {\n  const [tasks, setTasks] = useState<string[]>([...configList]);\n  const [task, setTask] = useState<string>(\"\");\n  const [isEditTask, setIsEditTask] = useState<boolean>(false);\n  const [editableTask, setEditableTask] = useState<string>(\"\");\n\n  const handleDeleteTask = (indexTask: number) => {\n    const newTasksList = tasks.filter((item, index) => index !== indexTask);\n\n    setTasks(newTasksList);\n  };\n\n  console.log(tasks);\n\n  const handleChangeTask = (e: ChangeEvent<HTMLInputElement>) => {\n    setTask(e.target.value);\n  };\n\n  const handleAddTask = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (task.trim() !== \"\") {\n      const newTasksList = [...tasks, task];\n      setTasks(newTasksList);\n      setTask(\"\");\n    }\n  };\n\n  const handleEditTask = () => {};\n\n  return (\n    <div>\n      {tasks.map((task, index) => (\n        <div key={index}>\n          <p>{task}</p>\n          <button onClick={() => handleDeleteTask(index)}>Delite task</button>\n        </div>\n      ))}\n\n      <div>\n        <form onSubmit={handleAddTask}>\n          {!isEditTask ? (\n            <>\n              <input\n                type=\"text\"\n                placeholder=\"Input task\"\n                value={task}\n                onChange={handleChangeTask}\n              />\n              <button onClick={setIsEditTask(true)}>Edit</button>\n            </>\n          ) : (\n            <></>\n          )}\n          <button type=\"submit\">add task</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}